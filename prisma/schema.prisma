// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id])
}

model Producto {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nombre     String
  imagenUrl   String?
  descripcion String?
  precio Decimal
  categoria String
  cajaProductos CajaProducto[]
}

model Caja {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nombre     String
  imagenUrl   String?
  descripcion String?
  emoji String?
  precio Decimal
  cajaProductos CajaProducto[]
}

model CajaProducto {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cajaId  Int?
  productoId  Int?
  caja     Caja?    @relation(fields: [cajaId], references: [id])
  producto     Producto?    @relation(fields: [productoId], references: [id])
  precio Decimal
  cantidad Decimal
  unidad  String
}

